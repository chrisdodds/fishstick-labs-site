---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const allPosts = await getCollection("blog");
const postsData = await Promise.all(
  allPosts
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(async (post) => {
      const { Content } = await post.render();
      return { post, Content };
    })
);

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  }).format(date);
};
---

<Layout>
  <div id="main">
    <h1>Writing</h1>
    <p class="tagline">
      <a href="/rss.xml" style="font-size: 0.9em; white-space: nowrap;">RSS →</a>
    </p>

    <section id="posts">
      {
        postsData.length === 0 ? (
          <p style="color: #9ca3af; font-style: italic;">
            Nothing here yet. Check back soon.
          </p>
        ) : (
          <div class="post-list">
            {postsData.map(({ post, Content }) => (
              <article class="post-item">
                <a href={`/blog/${post.slug}`}>
                  <h3>{post.data.title}</h3>
                </a>
                <div class="post-excerpt">
                  <Content />
                </div>
                <div class="post-footer">
                  <div class="post-meta">
                    <span>{post.data.author}</span>
                    <span class="separator">•</span>
                    <time>{formatDate(post.data.pubDate)}</time>
                  </div>
                  <a href={`/blog/${post.slug}`} class="read-more">Read more →</a>
                </div>
                <hr class="post-divider" />
              </article>
            ))}
          </div>
        )
      }
    </section>

    <div style="margin-top: 40px;">
      <a href="/" style="font-size: 1.1em;">← Back to home</a>
    </div>
  </div>
</Layout>

<style>
  .post-list {
    display: flex;
    flex-direction: column;
    gap: 0;
    max-width: 700px;
    margin: 0 auto;
  }

  .post-item {
    text-align: left;
    padding-bottom: 40px;
    margin-bottom: 40px;
  }

  .post-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .post-item:last-child .post-divider {
    display: none;
  }

  .post-divider {
    border: none;
    border-top: 1px solid rgba(255, 255, 255, 0.08);
    margin: 40px 0 0 0;
  }

  .post-item a {
    display: block;
    text-decoration: none;
    color: inherit;
    border: none;
  }

  .post-item h3 {
    margin: 0 0 16px 0;
    color: #ffffff;
    font-size: 1.8em;
    font-weight: 600;
    line-height: 1.3;
  }

  .post-excerpt {
    color: #d8dae5;
    font-size: 1.05em;
    line-height: 1.7;
    margin-bottom: 16px;
    display: -webkit-box;
    -webkit-line-clamp: 6;
    -webkit-box-orient: vertical;
    overflow: hidden;
    position: relative;
  }

  .post-excerpt::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3em;
    background: linear-gradient(to bottom, transparent, #1a1d29);
    pointer-events: none;
  }

  .post-excerpt p {
    margin: 0 0 16px 0;
  }

  .post-excerpt p:last-child {
    margin-bottom: 0;
  }

  .post-excerpt a {
    color: #a78bfa;
  }

  .post-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 12px;
  }

  .post-meta {
    color: #9ca3af;
    font-size: 0.95em;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .post-meta .separator {
    color: #6b7280;
  }

  .read-more {
    color: #a78bfa;
    font-size: 0.95em;
    white-space: nowrap;
  }
</style>


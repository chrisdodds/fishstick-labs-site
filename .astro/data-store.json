[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.6","content-config-digest","6bfc2b77d3379ec0","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://fishsticklabs.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true,\"allowedDomains\":[]},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,31,32,50,51],"2025-10-01-paycom-ai-layoffs",{"id":11,"data":13,"body":18,"filePath":19,"digest":20,"rendered":21,"legacyId":30},{"title":14,"description":15,"pubDate":16,"author":17},"AI Layoffs","Paycom laid off a bunch of people, blamed AI.",["Date","2025-10-01T12:00:00.000Z"],"Chris Dodds","Paycom, OKC's biggest \"tech\" company, [announced layoffs](https://www.oklahoman.com/story/business/information-technology/2025/10/01/paycom-layoffs-2025-workers-replaced-with-ai/86448337007/) today that they blamed on AI. Lots of other companies have done the same recently (Microsoft, Saleforce, etc.)\n\nThe cynical (but true!) counter-narrative is that AI is just an excuse. Companies have always limped along with pointless inefficiencies.\n\nAfter a couple years of LLM work, my read is that most \"AI optimization\" is just someone finally asking obvious questions about bad processes. It's in-house consulting dressed up as innovation. AI mostly works as a permission structure to kill dumb workflows that could've been fixed 20 years ago.\n\nExample: many moons ago I worked at a company where field offices entered truck weights in a spreadsheet, printed and faxed them, and someone at corporate re-typed the numbers into Access. One hour of questioning turned that job into linked Excel sheets. I guess we could've slapped an \"AI transformation\" label on it.\n\nThat feels like what's happening now. \"Rub some AI on everything\" creates the cover story, but the real driver is people finally saying: \"Why are we doing this?\"\n\nUsing LLMs for meaningful work in a consistent/deterministic way is hard. These companies didn't all become AI experts overnight.\n\nNone of this makes the layoffs less brutal for the people caught up in them, but it does punch some more holes in the AI-is-eating-the-world story.","src/content/blog/2025-10-01-paycom-ai-layoffs.md","909245d50a873f5f",{"html":22,"metadata":23},"\u003Cp>Paycom, OKC’s biggest “tech” company, \u003Ca href=\"https://www.oklahoman.com/story/business/information-technology/2025/10/01/paycom-layoffs-2025-workers-replaced-with-ai/86448337007/\">announced layoffs\u003C/a> today that they blamed on AI. Lots of other companies have done the same recently (Microsoft, Saleforce, etc.)\u003C/p>\n\u003Cp>The cynical (but true!) counter-narrative is that AI is just an excuse. Companies have always limped along with pointless inefficiencies.\u003C/p>\n\u003Cp>After a couple years of LLM work, my read is that most “AI optimization” is just someone finally asking obvious questions about bad processes. It’s in-house consulting dressed up as innovation. AI mostly works as a permission structure to kill dumb workflows that could’ve been fixed 20 years ago.\u003C/p>\n\u003Cp>Example: many moons ago I worked at a company where field offices entered truck weights in a spreadsheet, printed and faxed them, and someone at corporate re-typed the numbers into Access. One hour of questioning turned that job into linked Excel sheets. I guess we could’ve slapped an “AI transformation” label on it.\u003C/p>\n\u003Cp>That feels like what’s happening now. “Rub some AI on everything” creates the cover story, but the real driver is people finally saying: “Why are we doing this?”\u003C/p>\n\u003Cp>Using LLMs for meaningful work in a consistent/deterministic way is hard. These companies didn’t all become AI experts overnight.\u003C/p>\n\u003Cp>None of this makes the layoffs less brutal for the people caught up in them, but it does punch some more holes in the AI-is-eating-the-world story.\u003C/p>",{"headings":24,"localImagePaths":25,"remoteImagePaths":26,"frontmatter":27,"imagePaths":29},[],[],[],{"title":14,"description":15,"pubDate":28},["Date","2025-10-01T12:00:00.000Z"],[],"2025-10-01-paycom-ai-layoffs.md","2020-09-12-monitoring-vpc-subnet-ips",{"id":31,"data":33,"body":37,"filePath":38,"digest":39,"rendered":40,"legacyId":49},{"title":34,"description":35,"pubDate":36,"author":17},"Monitor Available IPs with Lambda and CloudWatch","Building a custom monitoring solution for tracking VPC subnet IP availability in AWS EKS clusters when off-the-shelf tooling doesn't exist.",["Date","2020-09-12T19:48:02.000Z"],"I ran into a situation where I needed to keep track of available IPs related to an AWS EKS cluster and couldn't find any off-the-shelf tooling in AWS or otherwise to do so.\n\nTangential gripe: The reason I needed the monitor is because [EKS doesn't support adding subnets](https://github.com/aws/containers-roadmap/issues/170) to a cluster without re-creating it and the initial subnets that were used were a little too small due to reasons. I wanted to have a sense of how much runway I had pending AWS fixing the gap or me implementing a work around.\n\nSo, I cobbled together a Lambda function to pull the info and pipe it into CloudWatch.\n\n[Gist here](https://gist.github.com/chrisdodds/123abc5cffee2b72b2d3f0356c58c8f6)\n\nI'm using tags to scope the subnets I want to track, rather than piping in everything – since CloudWatch custom metrics cost money. But you could use whatever filters you wanted.\n\nAfter getting the data into CloudWatch, I was quickly reminded that you can't alarm off of multiple metrics, so I used a math expression (MIN) to group them instead. This works for up to 10 metrics (this post should really be titled \"The numerous, random limitations of AWS\"), which luckily worked for me in this instance.\n\nThen I setup an alarm for the threshold I wanted and tested it – it worked. Fun times.","src/content/blog/2020-09-12-monitoring-vpc-subnet-ips.md","631d86d0a130f19d",{"html":41,"metadata":42},"\u003Cp>I ran into a situation where I needed to keep track of available IPs related to an AWS EKS cluster and couldn’t find any off-the-shelf tooling in AWS or otherwise to do so.\u003C/p>\n\u003Cp>Tangential gripe: The reason I needed the monitor is because \u003Ca href=\"https://github.com/aws/containers-roadmap/issues/170\">EKS doesn’t support adding subnets\u003C/a> to a cluster without re-creating it and the initial subnets that were used were a little too small due to reasons. I wanted to have a sense of how much runway I had pending AWS fixing the gap or me implementing a work around.\u003C/p>\n\u003Cp>So, I cobbled together a Lambda function to pull the info and pipe it into CloudWatch.\u003C/p>\n\u003Cp>\u003Ca href=\"https://gist.github.com/chrisdodds/123abc5cffee2b72b2d3f0356c58c8f6\">Gist here\u003C/a>\u003C/p>\n\u003Cp>I’m using tags to scope the subnets I want to track, rather than piping in everything – since CloudWatch custom metrics cost money. But you could use whatever filters you wanted.\u003C/p>\n\u003Cp>After getting the data into CloudWatch, I was quickly reminded that you can’t alarm off of multiple metrics, so I used a math expression (MIN) to group them instead. This works for up to 10 metrics (this post should really be titled “The numerous, random limitations of AWS”), which luckily worked for me in this instance.\u003C/p>\n\u003Cp>Then I setup an alarm for the threshold I wanted and tested it – it worked. Fun times.\u003C/p>",{"headings":43,"localImagePaths":44,"remoteImagePaths":45,"frontmatter":46,"imagePaths":48},[],[],[],{"title":34,"description":35,"pubDate":47,"author":17},["Date","2020-09-12T19:48:02.000Z"],[],"2020-09-12-monitoring-vpc-subnet-ips.md","2019-05-21-postgresql-credential-rotation",{"id":50,"data":52,"body":56,"filePath":57,"digest":58,"rendered":59,"legacyId":68},{"title":53,"description":54,"pubDate":55,"author":17},"How to Live-Rotate PostgreSQL Credentials","A practical guide to rotating database credentials without downtime, navigating PostgreSQL's confusing role system along the way.",["Date","2019-05-21T18:49:04.000Z"],"OK, I didn't actually learn this today, but it wasn't *that* long ago.\n\nPostgres creds rotation is straightforward with the exception of the PG maintainers deciding in recent years that words don't mean anything while designing their identity model. \"Users\" and \"Groups\" used to exist in PG, [but were replaced in version 8.1 with the \"Role\" construct](https://www.postgresql.org/docs/10/user-manag.html).\n\nIn Postgres, everything is a \"Role.\" A user is a role. A group is a role. A role is a role. If you're familiar with literally any other identity system, just mentally translate \"Role\" to whatever makes sense in context.\n\nNow that we've established this nonsense, here's a way of handling live creds rotation.\n\n```sql\nCREATE ROLE user_group; -- create a role, give it appropriate grants.\n\nCREATE ROLE user_blue WITH ENCRYPTED PASSWORD 'REPLACE ME' IN ROLE user_group;\n\n-- This one isn't being used yet, so disable the login.\nCREATE ROLE user_green WITH ENCRYPTED PASSWORD 'REPLACE ME AS WELL' IN ROLE user_group nologin;\n```\n\nThat gets you prepped. When you're ready to flip things.\n\n```sql\nALTER USER user_green WITH PASSWORD 'new_password' login;\n```\n\nUpdate the creds wherever else they need updating, restart processes, confirm everything is using the new credentials, etc. Then\n\n```sql\nALTER USER user_blue WITH PASSWORD 'new_password_2' nologin;\n```\n\nEasy, peasy.","src/content/blog/2019-05-21-postgresql-credential-rotation.md","a351d78690f5b5e7",{"html":60,"metadata":61},"\u003Cp>OK, I didn’t actually learn this today, but it wasn’t \u003Cem>that\u003C/em> long ago.\u003C/p>\n\u003Cp>Postgres creds rotation is straightforward with the exception of the PG maintainers deciding in recent years that words don’t mean anything while designing their identity model. “Users” and “Groups” used to exist in PG, \u003Ca href=\"https://www.postgresql.org/docs/10/user-manag.html\">but were replaced in version 8.1 with the “Role” construct\u003C/a>.\u003C/p>\n\u003Cp>In Postgres, everything is a “Role.” A user is a role. A group is a role. A role is a role. If you’re familiar with literally any other identity system, just mentally translate “Role” to whatever makes sense in context.\u003C/p>\n\u003Cp>Now that we’ve established this nonsense, here’s a way of handling live creds rotation.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> ROLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_group; \u003C/span>\u003Cspan style=\"color:#6A737D\">-- create a role, give it appropriate grants.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> ROLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_blue \u003C/span>\u003Cspan style=\"color:#F97583\">WITH\u003C/span>\u003Cspan style=\"color:#F97583\"> ENCRYPTED\u003C/span>\u003Cspan style=\"color:#F97583\"> PASSWORD\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'REPLACE ME'\u003C/span>\u003Cspan style=\"color:#F97583\"> IN\u003C/span>\u003Cspan style=\"color:#F97583\"> ROLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_group;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- This one isn't being used yet, so disable the login.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> ROLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_green \u003C/span>\u003Cspan style=\"color:#F97583\">WITH\u003C/span>\u003Cspan style=\"color:#F97583\"> ENCRYPTED\u003C/span>\u003Cspan style=\"color:#F97583\"> PASSWORD\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'REPLACE ME AS WELL'\u003C/span>\u003Cspan style=\"color:#F97583\"> IN\u003C/span>\u003Cspan style=\"color:#F97583\"> ROLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_group nologin;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>That gets you prepped. When you’re ready to flip things.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> USER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_green \u003C/span>\u003Cspan style=\"color:#F97583\">WITH\u003C/span>\u003Cspan style=\"color:#F97583\"> PASSWORD\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'new_password'\u003C/span>\u003Cspan style=\"color:#F97583\"> login\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Update the creds wherever else they need updating, restart processes, confirm everything is using the new credentials, etc. Then\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ALTER\u003C/span>\u003Cspan style=\"color:#F97583\"> USER\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user_blue \u003C/span>\u003Cspan style=\"color:#F97583\">WITH\u003C/span>\u003Cspan style=\"color:#F97583\"> PASSWORD\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'new_password_2'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nologin;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Easy, peasy.\u003C/p>",{"headings":62,"localImagePaths":63,"remoteImagePaths":64,"frontmatter":65,"imagePaths":67},[],[],[],{"title":53,"description":54,"pubDate":66,"author":17},["Date","2019-05-21T18:49:04.000Z"],[],"2019-05-21-postgresql-credential-rotation.md"]